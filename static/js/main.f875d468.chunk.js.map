{"version":3,"sources":["components/Heading.js","components/DataTable.js","components/EmployeeList.js","components/App.js","reportWebVitals.js","index.js"],"names":["Heading","Container","className","style","height","Box","display","justifyContent","bgcolor","border","m","borderColor","width","borderAll","DataTable","employeeList","columns","field","headerName","renderCell","params","Avatar","src","value","rows","pageSize","checkboxSelection","EmployeeList","useState","users","setUsers","useEffect","a","fetch","response","json","userData","results","console","log","fetchData","map","user","index","name","first","last","email","phone","picture","thumbnail","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAIe,SAASA,IAUtB,OACE,cAACC,EAAA,EAAD,CAAWC,UAAU,UAAUC,MAAO,CAAEC,OAAQ,QAAhD,SACE,cAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,SACE,cAACF,EAAA,EAAD,2BAXe,CACnBG,QAAS,mBACTC,OAAQ,EACRC,EAAG,EACHC,YAAa,eACbR,MAAO,CAAES,MAAO,QAASR,OAAQ,UAM7B,IAAuBS,UAAW,EAAlC,SACE,gE,6DCdK,SAASC,EAAT,GAAoC,IAAhBC,EAAe,EAAfA,aAE3BC,EAAU,CACd,CACEC,MAAO,KACPC,WAAY,KACZN,MAAO,IAET,CACEK,MAAO,QACPC,WAAY,QACZN,MAAO,IACPO,WAAY,SAACC,GAAD,OACV,cAACC,EAAA,EAAD,CAAQC,IAAKF,EAAOG,UAGxB,CACEN,MAAO,YACPC,WAAY,aACZN,MAAO,KAET,CACEK,MAAO,WACPC,WAAY,YACZN,MAAO,KACT,CACEK,MAAO,QACPC,WAAY,QACZN,MAAO,KAET,CACEK,MAAO,cACPC,WAAY,QACZN,MAAO,MAIX,OACE,cAACX,EAAA,EAAD,UACE,qBAAKE,MAAO,CAAEC,OAAQ,IAAKQ,MAAO,QAAlC,SACE,cAAC,IAAD,CACEY,KAAMT,EACNC,QAASA,EACTS,SAAU,GACVC,mBAAiB,QC7CZ,SAASC,IAAgB,IAAD,EACXC,mBAAS,IADE,mBAC9BC,EAD8B,KACvBC,EADuB,KAGrCC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,+EAESC,MAAM,yCAFf,cAERC,EAFQ,gBAGSA,EAASC,OAHlB,OAGRC,EAHQ,OAIdN,EAAS,YAAIM,EAASC,UAJR,kDAMdC,QAAQC,IAAR,MANc,0DAAH,qDASfC,KAEC,IAEH,IAAMzB,EAAec,EAAMY,KAAI,SAACC,EAAMC,GAAP,MAC5B,CACC,GAAMA,GAAO,EACb,UAAaD,EAAKE,KAAKC,MACvB,SAAYH,EAAKE,KAAKE,KACtB,MAASJ,EAAKK,MACd,YAAeL,EAAKM,MACpB,MAASN,EAAKO,QAAQC,cAG1B,OACE,cAACpC,EAAD,CAAWC,aAAcA,IClBdoC,MATf,WACE,OACE,sBAAKjD,UAAU,MAAf,UACE,cAACF,EAAD,IACA,cAAC2B,EAAD,QCISyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f875d468.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Container, Box } from '@material-ui/core';\nimport '../App.css';\n\nexport default function Heading() {\n\n  const defaultProps = {\n    bgcolor: 'background.paper',\n    border: 1,\n    m: 1,\n    borderColor: 'text.primary',\n    style: { width: '20rem', height: '8rem' },\n  };\n\n  return (\n    <Container className=\"heading\" style={{ height: '20vh' }}>\n      <Box display=\"flex\" justifyContent=\"center\">\n        <Box {...defaultProps} borderAll={0}>\n          <h1>Employee Management Hub</h1>\n        </Box>\n      </Box>\n    </Container>\n  )\n}\n","import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Container, Avatar } from '@material-ui/core';\n\nexport default function DataTable({employeeList}) {\n\n  const columns = [\n    { \n      field: 'id', \n      headerName: 'ID', \n      width: 70 \n    },\n    { \n      field: 'photo',\n      headerName: 'Photo',\n      width: 130,\n      renderCell: (params) => (\n        <Avatar src={params.value}/>\n      ),\n    },\n    { \n      field: 'firstName', \n      headerName: 'First name', \n      width: 170 \n    },\n    { \n      field: 'lastName', \n      headerName: 'Last name', \n      width: 170 },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 300,\n    },\n    {\n      field: 'phoneNumber',\n      headerName: 'Phone',\n      width: 170,\n    },\n  ];\n\n  return (\n    <Container>\n      <div style={{ height: 600, width: '100%' }}>\n        <DataGrid \n          rows={employeeList}\n          columns={columns} \n          pageSize={20}\n          checkboxSelection\n        />\n      </div>\n    </Container>\n  );\n};","import React, {useEffect, useState} from 'react';\nimport DataTable from './DataTable';\n\nexport default function EmployeeList() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://randomuser.me/api/?results=10\")\n        const userData = await response.json();\n        setUsers([...userData.results])\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    fetchData()\n\n  }, []);\n\n  const employeeList = users.map((user, index) => (\n    ({\n      \"id\": index+=1, \n      \"firstName\": user.name.first, \n      \"lastName\": user.name.last, \n      \"email\": user.email, \n      \"phoneNumber\": user.phone, \n      \"photo\": user.picture.thumbnail\n   })))\n\n  return (\n    <DataTable employeeList={employeeList}/>\n  )\n};\n","import '../App.css';\nimport Heading from './Heading';\nimport EmployeeList from './EmployeeList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Heading />\n      <EmployeeList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}